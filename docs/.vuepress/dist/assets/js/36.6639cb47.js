(window.webpackJsonp=window.webpackJsonp||[]).push([[36],{312:function(s,v,_){"use strict";_.r(v);var o=_(14),i=Object(o.a)({},(function(){var s=this,v=s._self._c;return v("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[v("h1",{attrs:{id:"单点登录-sso-single-sign-on"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#单点登录-sso-single-sign-on"}},[s._v("#")]),s._v(" 单点登录（SSO）Single Sign On")]),s._v(" "),v("p",[v("strong",[s._v("在多个应用系统中，只需要登录一次，就可以访问其他相互信任的应用系统。")])]),s._v(" "),v("h1",{attrs:{id:"同域下的单点登录"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#同域下的单点登录"}},[s._v("#")]),s._v(" 同域下的单点登录")]),s._v(" "),v("p",[s._v("如果业务系统都在同一主域名下，比如"),v("code",[s._v("wenku.baidu.com")]),s._v(" "),v("code",[s._v("tieba.baidu.com")]),s._v("，就好办了。可以直接把 cookie domain 设置为主域名 "),v("code",[s._v("baidu.com")])]),s._v(" "),v("p",[v("strong",[s._v("我们在设置Cookie时，只能设置顶域和自己的域，不能设置其他的域。比如：我们不能在自己的系统中给baidu.com的域设置Cookie。")])]),s._v(" "),v("h1",{attrs:{id:"不同域下的单点登录"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#不同域下的单点登录"}},[s._v("#")]),s._v(" 不同域下的单点登录")]),s._v(" "),v("h2",{attrs:{id:"登录"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#登录"}},[s._v("#")]),s._v(" 登录")]),s._v(" "),v("p",[s._v("sso需要一个独立的认证中心，只有认证中心能接受用户的用户名密码等安全信息，其他系统不提供登录入口，只接受认证中心的间接授权。")]),s._v(" "),v("p",[s._v("间接授权通过令牌实现，sso认证中心验证用户的用户名密码没问题，创建授权令牌，在接下来的跳转过程中，授权令牌作为参数发送给各个子系统，子系统拿到令牌，即得到了授权，可以借此创建局部会话，局部会话登录方式与单系统的登录方式相同。")]),s._v(" "),v("p",[v("strong",[s._v("流程")])]),s._v(" "),v("ol",[v("li",[s._v("用户访问系统1的受保护资源，系统1发现用户未登录，跳转至sso认证中心，并将自己的地址作为参数")]),s._v(" "),v("li",[s._v("sso认证中心发现用户未登录，将用户引导至登录页面（带系统1地址）")]),s._v(" "),v("li",[s._v("用户输入用户名密码提交登录申请")]),s._v(" "),v("li",[v("code",[s._v("sso认证中心校验用户信息，创建用户与sso认证中心之间的会话，称为全局会话（这时该会话信息保存到cookie中），同时创建授权令牌")])]),s._v(" "),v("li",[s._v("sso认证中心带着令牌跳转到最初的请求地址（系统1）")]),s._v(" "),v("li",[s._v("系统1拿到令牌，去sso认证中心校验令牌是否有效")]),s._v(" "),v("li",[s._v("sso认证中心校验令牌，返回有效，注册系统1")]),s._v(" "),v("li",[v("code",[s._v("系统1使用该令牌创建与用户的会话，称为局部会话(seesion)，返回受保护资源")])]),s._v(" "),v("li",[s._v("用户访问系统2的受保护资源")]),s._v(" "),v("li",[s._v("系统2发现用户未登录，跳转至sso认证中心，并将自己的"),v("code",[s._v("地址")]),s._v("和之前和"),v("code",[s._v("sso认证中心的会话cookie信")]),s._v("息作为参数")]),s._v(" "),v("li",[s._v("sso认证中心发现用户已登录，跳转回系统2的地址，并附上令牌")]),s._v(" "),v("li",[s._v("系统2拿到令牌，去sso认证中心校验令牌是否有效")]),s._v(" "),v("li",[s._v("sso认证中心校验令牌，返回有效，注册系统2")]),s._v(" "),v("li",[s._v("系统2使用该令牌创建与用户的局部会话，返回受保护资源")])]),s._v(" "),v("p",[s._v("用户登录成功之后，会与sso认证中心及访问的子系统建立会话，用户与sso认证中心建立的会话称为全局会话，用户与各个子系统建立的会话称为局部会话，局部会话建立之后，用户访问子系统受保护资源将不再通过sso认证中心，全局会话与局部会话有如下约束关系")]),s._v(" "),v("ol",[v("li",[s._v("局部会话存在，全局会话一定存在")]),s._v(" "),v("li",[s._v("全局会话存在，局部会话不一定存在")]),s._v(" "),v("li",[s._v("全局会话销毁，局部会话必须销毁")])]),s._v(" "),v("h2",{attrs:{id:"注销"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#注销"}},[s._v("#")]),s._v(" 注销")]),s._v(" "),v("p",[s._v("在一个子系统中注销，所有子系统的会话都将被销毁")]),s._v(" "),v("p",[s._v("sso认证中心一直监听全局会话的状态，一旦全局会话销毁，监听器将通知所有注册系统执行注销操作")]),s._v(" "),v("ol",[v("li",[s._v("用户向系统1发起注销请求")]),s._v(" "),v("li",[s._v("系统1根据用户与系统1建立的会话id拿到令牌，向sso认证中心发起注销请求")]),s._v(" "),v("li",[s._v("sso认证中心校验令牌有效，销毁全局会话，同时取出所有用此令牌注册的系统地址")]),s._v(" "),v("li",[s._v("sso认证中心向所有注册系统发起注销请求")]),s._v(" "),v("li",[s._v("各注册系统接收sso认证中心的注销请求，销毁局部会话")]),s._v(" "),v("li",[s._v("sso认证中心引导用户至登录页面")])]),s._v(" "),v("p",[s._v("单点登录要求不同域下的系统「一次登录，全线通用」，通常由独立的 SSO 系统记录登录状态、下发令牌(ticket)，各业务系统配合存储和认证 ticket")])])}),[],!1,null,null,null);v.default=i.exports}}]);