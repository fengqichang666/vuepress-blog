(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{280:function(e,n,t){"use strict";t.r(n);var a=t(14),s=Object(a.a)({},(function(){var e=this,n=e._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("h2",{attrs:{id:"_1、校验数据类型"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1、校验数据类型"}},[e._v("#")]),e._v(" 1、校验数据类型")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("export const typeOf = function(obj) {\n  return Object.prototype.toString.call(obj).slice(8, -1).toLowerCase()\n}\n// 示例\ntypeOf('树哥')  // string\ntypeOf([])  // array\ntypeOf(new Date())  // date\ntypeOf(null) // null\ntypeOf(true) // boolean\ntypeOf(() => { }) // function\n")])])]),n("h2",{attrs:{id:"_2、防抖"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2、防抖"}},[e._v("#")]),e._v(" 2、防抖")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("export const debounce = (() => {\n  let timer = null\n  return (callback, wait = 800) => {\n    timer&&clearTimeout(timer)\n    timer = setTimeout(callback, wait)\n  }\n})()\n// 示例\nmethods: {\n  loadList() {\n    debounce(() => {\n      console.log('加载数据')\n    }, 500)\n  }\n}\n")])])]),n("h2",{attrs:{id:"_3、节流"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3、节流"}},[e._v("#")]),e._v(" 3、节流")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("export const throttle = (() => {\n  let last = 0\n  return (callback, wait = 800) => {\n    let now = +new Date()\n    if (now - last > wait) {\n      callback()\n      last = now\n    }\n  }\n})()\n")])])]),n("h2",{attrs:{id:"_4、手机号脱敏"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4、手机号脱敏"}},[e._v("#")]),e._v(" 4、手机号脱敏")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('export const hideMobile = (mobile) => {\n  return mobile.replace(/^(\\d{3})\\d{4}(\\d{4})$/, "$1****$2")\n}\n')])])]),n("h2",{attrs:{id:"_5、开启全屏"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5、开启全屏"}},[e._v("#")]),e._v(" 5、开启全屏")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("export const launchFullscreen = (element) => {\n  if (element.requestFullscreen) {\n    element.requestFullscreen()\n  } else if (element.mozRequestFullScreen) {\n    element.mozRequestFullScreen()\n  } else if (element.msRequestFullscreen) {\n    element.msRequestFullscreen()\n  } else if (element.webkitRequestFullscreen) {\n    element.webkitRequestFullScreen()\n  }\n}\n")])])]),n("h2",{attrs:{id:"_6、关闭全屏"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_6、关闭全屏"}},[e._v("#")]),e._v(" 6、关闭全屏")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("export const exitFullscreen = () => {\n  if (document.exitFullscreen) {\n    document.exitFullscreen()\n  } else if (document.msExitFullscreen) {\n    document.msExitFullscreen()\n  } else if (document.mozCancelFullScreen) {\n    document.mozCancelFullScreen()\n  } else if (document.webkitExitFullscreen) {\n    document.webkitExitFullscreen()\n  }\n}\n")])])]),n("h2",{attrs:{id:"_7、大小写转换"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_7、大小写转换"}},[e._v("#")]),e._v(" 7、大小写转换")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("// str 待转换的字符串\n// type 1-全大写 2-全小写 3-首字母大写\nexport const turnCase = (str, type) => {\n  switch (type) {\n    case 1:\n      return str.toUpperCase()\n    case 2:\n      return str.toLowerCase()\n    case 3:\n      //return str[0].toUpperCase() + str.substr(1).toLowerCase() // substr 已不推荐使用\n      return str[0].toUpperCase() + str.substring(1).toLowerCase()\n    default:\n      return str\n  }\n}\n")])])]),n("h2",{attrs:{id:"_8、解析url参数"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_8、解析url参数"}},[e._v("#")]),e._v(" 8、解析URL参数")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('export const getSearchParams = () => {\n  const searchPar = new URLSearchParams(window.location.search)\n  const paramsObj = {}\n  for (const [key, value] of searchPar.entries()) {\n    paramsObj[key] = value\n  }\n  return paramsObj\n}\n\n// 假设目前位于 https://****com/index?id=154513&age=18;\ngetSearchParams(); // {id: "154513", age: "18"}\n')])])]),n("h2",{attrs:{id:"_9、判断手机是andoird还是ios"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_9、判断手机是andoird还是ios"}},[e._v("#")]),e._v(" 9、判断手机是Andoird还是IOS")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("/** \n * 1: ios\n * 2: android\n * 3: 其它\n */\nexport const getOSType=() => {\n  let u = navigator.userAgent, app = navigator.appVersion;\n  let isAndroid = u.indexOf('Android') > -1 || u.indexOf('Linux') > -1;\n  let isIOS = !!u.match(/\\(i[^;]+;( U;)? CPU.+Mac OS X/);\n  if (isIOS) {\n    return 1;\n  }\n  if (isAndroid) {\n    return 2;\n  }\n  return 3;\n}\n")])])]),n("h2",{attrs:{id:"_10、数组对象根据字段去重"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_10、数组对象根据字段去重"}},[e._v("#")]),e._v(" 10、数组对象根据字段去重")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("// arr 要去重的数组\n// key 根据去重的字段名\nexport const uniqueArrayObject = (arr = [], key = 'id') => {\n  if (arr.length === 0) return\n  let list = []\n  const map = {}\n  arr.forEach((item) => {\n    if (!map[item[key]]) {\n      map[item[key]] = item\n    }\n  })\n  list = Object.values(map)\n\n  return list\n}\n")])])]),n("h2",{attrs:{id:"_11、滚动到页面顶部"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_11、滚动到页面顶部"}},[e._v("#")]),e._v(" 11、滚动到页面顶部")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("export const scrollToTop = () => {\n  const height = document.documentElement.scrollTop || document.body.scrollTop;\n  if (height > 0) {\n    window.requestAnimationFrame(scrollToTop);\n    window.scrollTo(0, height - height / 8);\n  }\n}\n")])])]),n("h2",{attrs:{id:"_12、滚动到元素位置"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_12、滚动到元素位置"}},[e._v("#")]),e._v(" 12、滚动到元素位置")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("export const smoothScroll = element =>{\n    document.querySelector(element).scrollIntoView({\n        behavior: 'smooth'\n    });\n};\n")])])]),n("h2",{attrs:{id:"_13、金额格式化"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_13、金额格式化"}},[e._v("#")]),e._v(" 13、金额格式化")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("// {number} number：要格式化的数字\n// {number} decimals：保留几位小数\n// {string} dec_point：小数点符号\n// {string} thousands_sep：千分位符号\nexport const moneyFormat = (number, decimals, dec_point, thousands_sep) => {\n  number = (number + '').replace(/[^0-9+-Ee.]/g, '')\n  const n = !isFinite(+number) ? 0 : +number\n  const prec = !isFinite(+decimals) ? 2 : Math.abs(decimals)\n  const sep = typeof thousands_sep === 'undefined' ? ',' : thousands_sep\n  const dec = typeof dec_point === 'undefined' ? '.' : dec_point\n  let s = ''\n  const toFixedFix = function(n, prec) {\n    const k = Math.pow(10, prec)\n    return '' + Math.ceil(n * k) / k\n  }\n  s = (prec ? toFixedFix(n, prec) : '' + Math.round(n)).split('.')\n  const re = /(-?\\d+)(\\d{3})/\n  while (re.test(s[0])) {\n    s[0] = s[0].replace(re, '$1' + sep + '$2')\n  }\n\n  if ((s[1] || '').length < prec) {\n    s[1] = s[1] || ''\n    s[1] += new Array(prec - s[1].length + 1).join('0')\n  }\n  return s.join(dec)\n}\n")])])]),n("h2",{attrs:{id:"_14、存储操作"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_14、存储操作"}},[e._v("#")]),e._v(" 14、存储操作")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("class MyCache {\n  constructor(isLocal = true) {\n    this.storage = isLocal ? localStorage : sessionStorage\n  }\n\n  setItem(key, value) {\n    if (typeof (value) === 'object') value = JSON.stringify(value)\n    this.storage.setItem(key, value)\n  }\n\n  getItem(key) {\n    try {\n      return JSON.parse(this.storage.getItem(key))\n    } catch (err) {\n      return this.storage.getItem(key)\n    }\n  }\n\n  removeItem(key) {\n    this.storage.removeItem(key)\n  }\n\n  clear() {\n    this.storage.clear()\n  }\n\n  key(index) {\n    return this.storage.key(index)\n  }\n\n  length() {\n    return this.storage.length\n  }\n}\n\nconst localCache = new MyCache()\nconst sessionCache = new MyCache(false)\n\nexport { localCache, sessionCache }\n")])])]),n("h2",{attrs:{id:"_15、下载文件"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_15、下载文件"}},[e._v("#")]),e._v(" 15、下载文件")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("//api 接口\n//params 请求参数\n//fileName 文件名\nconst downloadFile = (api, params, fileName, type = 'get') => {\n  axios({\n    method: type,\n    url: api,\n    responseType: 'blob', \n    params: params\n  }).then((res) => {\n    let str = res.headers['content-disposition']\n    if (!res || !str) {\n      return\n    }\n    let suffix = ''\n    // 截取文件名和文件类型\n    if (str.lastIndexOf('.')) {\n      fileName ? '' : fileName = decodeURI(str.substring(str.indexOf('=') + 1, str.lastIndexOf('.')))\n      suffix = str.substring(str.lastIndexOf('.'), str.length)\n    }\n    //  如果支持微软的文件下载方式(ie10+浏览器)\n    if (window.navigator.msSaveBlob) {\n      try {\n        const blobObject = new Blob([res.data]);\n        window.navigator.msSaveBlob(blobObject, fileName + suffix);\n      } catch (e) {\n        console.log(e);\n      }\n    } else {\n      //  其他浏览器\n      let url = window.URL.createObjectURL(res.data)\n      let link = document.createElement('a')\n      link.style.display = 'none'\n      link.href = url\n      link.setAttribute('download', fileName + suffix)\n      document.body.appendChild(link)\n      link.click()\n      document.body.removeChild(link)\n      window.URL.revokeObjectURL(link.href);\n    }\n  }).catch((err) => {\n    console.log(err.message);\n  })\n}\n\n\n")])])]),n("h2",{attrs:{id:"_16、深拷贝"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_16、深拷贝"}},[e._v("#")]),e._v(" 16、深拷贝")]),e._v(" "),n("p",[e._v("此方法存在一定局限性：一些特殊情况没有处理: 例如Buffer对象、Promise、Set、Map。")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('export const clone = parent => {\n  // 判断类型\n  const isType = (obj, type) => {\n    if (typeof obj !== "object") return false;\n    const typeString = Object.prototype.toString.call(obj);\n    let flag;\n    switch (type) {\n      case "Array":\n        flag = typeString === "[object Array]";\n        break;\n      case "Date":\n        flag = typeString === "[object Date]";\n        break;\n      case "RegExp":\n        flag = typeString === "[object RegExp]";\n        break;\n      default:\n        flag = false;\n    }\n    return flag;\n  };\n\n  // 处理正则\n  const getRegExp = re => {\n    var flags = "";\n    if (re.global) flags += "g";\n    if (re.ignoreCase) flags += "i";\n    if (re.multiline) flags += "m";\n    return flags;\n  };\n  // 维护两个储存循环引用的数组\n  const parents = [];\n  const children = [];\n\n  const _clone = parent => {\n    if (parent === null) return null;\n    if (typeof parent !== "object") return parent;\n\n    let child, proto;\n\n    if (isType(parent, "Array")) {\n      // 对数组做特殊处理\n      child = [];\n    } else if (isType(parent, "RegExp")) {\n      // 对正则对象做特殊处理\n      child = new RegExp(parent.source, getRegExp(parent));\n      if (parent.lastIndex) child.lastIndex = parent.lastIndex;\n    } else if (isType(parent, "Date")) {\n      // 对Date对象做特殊处理\n      child = new Date(parent.getTime());\n    } else {\n      // 处理对象原型\n      proto = Object.getPrototypeOf(parent);\n      // 利用Object.create切断原型链\n      child = Object.create(proto);\n    }\n\n    // 处理循环引用\n    const index = parents.indexOf(parent);\n\n    if (index != -1) {\n      // 如果父数组存在本对象,说明之前已经被引用过,直接返回此对象\n      return children[index];\n    }\n    parents.push(parent);\n    children.push(child);\n\n    for (let i in parent) {\n      // 递归\n      child[i] = _clone(parent[i]);\n    }\n\n    return child;\n  };\n  return _clone(parent);\n};\n')])])]),n("h2",{attrs:{id:"_17、模糊搜索"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_17、模糊搜索"}},[e._v("#")]),e._v(" 17、模糊搜索")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("// list 原数组\n// keyWord 查询的关键词\n// attribute 数组需要检索属性\nexport const fuzzyQuery = (list, keyWord, attribute = 'name') => {\n  const reg = new RegExp(keyWord)\n  const arr = []\n  for (let i = 0; i < list.length; i++) {\n    if (reg.test(list[i][attribute])) {\n      arr.push(list[i])\n    }\n  }\n  return arr\n}\n\n//示例\nconst list = [\n  { id: 1, name: '树哥' },\n  { id: 2, name: '黄老爷' },\n  { id: 3, name: '张麻子' },\n  { id: 4, name: '汤师爷' },\n  { id: 5, name: '胡万' },\n  { id: 6, name: '花姐' },\n  { id: 7, name: '小梅' }\n]\nfuzzyQuery(list, '树', 'name') // [{id: 1, name: '树哥'}]\n")])])]),n("h2",{attrs:{id:"_18、遍历树节点"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_18、遍历树节点"}},[e._v("#")]),e._v(" 18、遍历树节点")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("export const foreachTree = (data, callback, childrenName = 'children') => {\n  for (let i = 0; i < data.length; i++) {\n    callback(data[i])\n    if (data[i][childrenName] && data[i][childrenName].length > 0) {\n      foreachTree(data[i][childrenName], callback, childrenName)\n    }\n  }\n}\n// 示例\nconst treeData = [{\n  id: 1,\n  label: '一级 1',\n  children: [{\n    id: 4,\n    label: '二级 1-1',\n    children: [{\n      id: 9,\n      label: '三级 1-1-1'\n    }, {\n      id: 10,\n      label: '三级 1-1-2'\n    }]\n  }]\n }, {\n  id: 2,\n  label: '一级 2',\n  children: [{\n    id: 5,\n    label: '二级 2-1'\n  }, {\n    id: 6,\n    label: '二级 2-2'\n  }]\n  }, {\n    id: 3,\n    label: '一级 3',\n    children: [{\n      id: 7,\n      label: '二级 3-1'\n    }, {\n      id: 8,\n      label: '二级 3-2'\n    }]\n}],\n\nlet result\nforeachTree(data, (item) => {\n  if (item.id === 9) {\n    result = item\n  }\n})\nconsole.log('result', result)  // {id: 9,label: \"三级 1-1-1\"} \n")])])]),n("h2",{attrs:{id:"_19、停止冒泡事件"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_19、停止冒泡事件"}},[e._v("#")]),e._v(" 19、停止冒泡事件")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("const stopPropagation = (event) => {\n  event = event || window.event;\n  if (event.stopPropagation) {\n    event.stopPropagation();\n  } else {\n    event.cancelBubble = true;\n  }\n};\n")])])])])}),[],!1,null,null,null);n.default=s.exports}}]);